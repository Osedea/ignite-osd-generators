// @flow
import React, { Component<% if (props.isPure) {%>, PureComponent<%}%> } from 'react';
import { StyleSheet } from 'react-native';
<% if (props.isConnected) { %>import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { createStructuredSelector } from 'reselect';<% } %>

import Text from '<%= props.appName %>/app/components/base/Text';
import View from '<%= props.appName %>/app/components/base/View';

const styles = StyleSheet.create({
    container: {},
});

type Props = {};
<% var typeOfComponent = props.isPure ? 'PureComponent' : 'Component' %>
<% if (props.isConnected) { %>class <%= props.name %> extends <%= typeOfComponent %><Props> {<% } else { %>export default class <%= props.name %> extends <%= typeOfComponent %><Props> {<% } %>

    // Defaults for props
    static defaultProps = {};

    render() {
        return (
            <View style={styles.container}>
                <Text><%= props.name %> <%= typeOfComponent %></Text>
            </View>
        );
    }
}

<% if (props.isConnected) { %>const mapStateToProps = createStructuredSelector({
});
const mapDispatchToProps = (dispatch) => bindActionCreators(
    {},
    dispatch
);

export default connect(mapStateToProps, mapDispatchToProps)(<%= props.name %>);<% } %>
