// @flow
import React, { Component } from 'react';
import { StyleSheet } from 'react-native';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { createStructuredSelector } from 'reselect';

import Text from '<%= props.appName %>/app/components/base/Text';
import ViewContainer from '<%= props.appName %>/app/containers/ViewContainer';
// import YourSelector from '<%= props.appName %>/app/services/YourService/selectors';
// import YourThunk from '<%= props.appName %>/app/services/YourService/thunks';

const styles = StyleSheet.create({
    container: {
    },
});

type Props = {};

class <%= props.name %>View extends Component<Props> {
    // constructor (props) {
    //     super(props)
    //
    //     this.state = {};
    // }

    // state = {};

    render() {
        return (
            <ViewContainer style={styles.container}>
                <Text><%= props.name %></Text>
            </ViewContainer>
        );
    }
}

const mapStateToProps = createStructuredSelector({
    // yourProp: YourSelector(),
});
const mapDispatchToProps = (dispatch) => bindActionCreators(
    {
        // YourThunk,
    },
    dispatch
);

export default connect(mapStateToProps, mapDispatchToProps)(<%= props.name %>View);
